/*
 * 	DOMinus.js
 *	Version 2.0.10
 * 	https://github.com/Gurigraphics/DOMinus.js
 *
 * 	Licensed under the MIT license:
 * 	http://www.opensource.org/licenses/MIT
 *  
 *	DOMinus.js is a reactive data binding library that turn HTML irrelevant.
 */ 
var Dominus=function(){var e={},n={},t={RENDER:[],get:e=>s.contains(e,"#")?((e=document.getElementById(s.subs(e))).addClass=(n=>e.classList.add(n)),e.removeClass=(n=>e.classList.remove(n)),e.hasClass=(n=>e.classList.contains(n)),e.toogleClass=(n=>e.hasClass(n)?e.removeClass(n):e.addClass(n)),e.hide=(()=>e.style.display="none"),e.show=(()=>e.style.display="block"),e.val=(()=>e.value),e.html=(n=>e.innerHTML=n),e.append=(n=>e.insertAdjacentHTML("beforeend",n)),e.prepend=(n=>e.insertAdjacentHTML("afterbegin",n)),e):((e=document.querySelectorAll(e))[0].addClass=(n=>e.forEach(function(e){e.classList.add(n)})),e[0].removeClass=(n=>e.forEach(function(e){e.classList.remove(n)})),e[0].hasClass=(n=>e[0].classList.contains(n)),e[0].toogleClass=(n=>e[0].hasClass(n)?e[0].removeClass(n):e[0].addClass(n)),e[0].hide=(()=>e.forEach(function(e){e.style.display="none"})),e[0].show=(()=>e.forEach(function(e){e.style.display="block"})),e[0].val=(()=>e[0].value),e[0].html=(n=>e.forEach(function(e){e.innerHTML=n})),e[0].append=(n=>e.forEach(function(e){e.insertAdjacentHTML("beforeend",n)})),e[0].prepend=(n=>e.forEach(function(e){e.insertAdjacentHTML("afterbegin",n)})),e[0]),add:(n,a)=>{for(index in e)if(e[index]&&e[index].html)if(s.isArray(e[index].html))for(items in e[index].html)e[e[index].html[items]].parent||(e[e[index].html[items]].parent=index);else e[e[index].html]&&(e[e[index].html].parent=index);s.contains(n,"<")?t.draw(a,n):t.render(n,a)},render:(e,n)=>{t.RENDER[e]=[n,e],t.update(e)},getRender:e=>t.RENDER[e],update:async function(n){var d=t.getRender(n);d&&(t.draw(d[0],a.h(e[d[1]])),s.log("updated",n))},draw:(e,n)=>{n?s.contains(n,"<undefined>")?t.none(e):t.get(e).innerHTML=n:t.none(e)},none:e=>t.get(e).innerHTML=" "},a={emptyElements:["area","base","br","col","embed","hr","img","input","keygen","link","meta","param","source","track","wbr"],h:e=>e&&s.isArray(e)?a.mountMap(e):e?a.mount(e):0,x:(n,t="")=>(n.forEach(function(n){t+=a.mount(e[n])}),t),mount(n){!n.tag&&(n.tag="div");var t="<"+n.tag;for(index in n)"tag"!=index&&"html"!=index&&(t+=" "+index+"='"+n[index]+"' ");return a.emptyElements.includes(n.tag)?t+"/>":(n.html?e[n.html]?t+=">"+a.h(e[n.html]):s.isArray(n.html)?t+=">"+a.x(n.html):t+=">"+n.html:t+=">",t+"</"+n.tag+">")},mountMap:(e,n="")=>(e.map((t,s)=>{n+=a.mount(e[s])}),n)},s={subs:e=>e.substring(1),contains:(e,n)=>-1!==e.indexOf(n),isArray:e=>e&&"object"==typeof e&&e.constructor===Array,isString:e=>"string"==typeof e||e instanceof String,removeArray:(n,t)=>{e[n].html=e[n].html.filter(e=>e!==t)},log(e,n,t=""){t="deleted"==e?"Removed:":"changed"==e?"Changed path:":"Updated path:",console.log(`${t} ${n}`)}},d={keys:{},obj:{},get:(e,n)=>(d.changed=n,"object"==typeof e[n]&&null!==e[n]?new Proxy(e[n],d):e[n]),set(e,n,t,a,s){s=d.changed,e[n]=t,s&&d.change(s)},change(n){e[n]&&e[n].parent?d.elementChanged(e[n].parent):d.elementChanged(n)},deleteProperty(n,t,a){t in n&&(e[t]&&e[t].parent&&(a=e[t].parent),delete n[t],d.remove(t),a?d.elementChanged(a):d.elementChanged(t),s.log("deleted",t))},remove(n){for(index in e)s.isArray(e[index].html)&&e[index].html.includes(n)?s.removeArray(index,n):e[index].html==n&&(e[index].html="")},elementChanged(e){t.update(e),s.log("changed",e)}};return e=new Proxy({},d),{add:(e,n)=>t.add(e,n),get:e=>t.get(e),h:e=>a.h.bind({}),HTML:()=>e,EVENTS:()=>n}};module.exports=Dominus;

